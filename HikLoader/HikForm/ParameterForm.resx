<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAAAAAAAEAIADcGgAAFgAAAIlQTkcNChoKAAAADUlIRFIAAAEAAAABAAgGAAAAXHKoZgAAAAZi
        S0dEAP8A/wD/oL2nkwAAAAlwSFlzAAAASAAAAEgARslrPgAAGhpJREFUeNrt3X18HNV97/HPzK6k1bMt
        S8L4gYARj6GGUNrSvFziGJRQLmyebhNIQyBpkxZwm+TSJE1eIbxCMM3NbdObxL1N2ubemzSQkrxyG4ak
        IRgLG6uEB8cFh7jGCGOE8VNkWdbDarUPc+4fI4Ft7Ur7NDu72u/79TovySvNzJmxzm/OOXPOGRARERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERqTlW0BkQ/ziOswq4aDpdPP31XCAcdN58EgcOAUeAHcBPgb5oNDoedMYqlQLAAuQ4
        zqXA14E3B52XChAH/gr4cjQajQedmUqjALCAOI7TjffHfjNgh0JhWttaaWpqIhKJEA7XEQ6HsayF+d9u
        jMFNp0m7aWKxGCPHjjExMTHz433Ax6LRqBN0PivJwvxLqEGO46wHNgBtoVCIlSvPoKu7i5Bt47qGtJsO
        OotlY1kWtm1jWzZTiSleGRxkaGho5scPAbdEo9F9QeezEigALADThf/rAIsWLaLnnHPAQGxykqmpKYwx
        QWcxELZtE4k00NTYxERsgud37yaVSgEMAr8ZjUaHijxE1VMAqHKO47wNr7PLXrFyJctOX0YymeT46GjQ
        WasYtm2zeNEiXOOye/duJsbHAR4DroxGo6mg8xfotQk6A1I4x3HOB34A2J2dXSw7/XSmElMq/KdwXZdj
        IyPYls05PT2Ew2GAK5iuNdUyBYAq5ThOB/AToK2lpYUVK1eQSCQZG9MTr0xmgkA4XMdZq86e6Qj9U8dx
        Php03oKkAFC91gOrGhoidHWfxujoGKNjY0HnqaK5rsvwsWOk02m6urpnPv664ziLgs5bUBQAqteNAB1L
        OhbsYz0/tbS20tjYCFAPvDvo/ARFAaAKOY7zZqAnHA7T2NgUdHaqVktL68y3fxh0XoKiAFCdboST/oCl
        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
</value>
  </data>
</root>